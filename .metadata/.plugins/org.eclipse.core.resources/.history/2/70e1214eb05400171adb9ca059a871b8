package com.jt.manage.service;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jt.common.service.BaseService;
import com.jt.common.service.RedisService;
import com.jt.manage.mapper.ItemCatMapper;
import com.jt.manage.pojo.ItemCat;


@Service
public class ItemCatService extends BaseService<ItemCat>{
	@Autowired
	private ItemCatMapper itemCatMapper;
	@Autowired
	private RedisService redisService;
	//jackson
	private static final ObjectMapper MAPPER = new ObjectMapper();
	private static final Logger log =Logger.getLogger(ItemCatService.class);

	public List<ItemCat> treeList(Long id) {
		List<ItemCat> itemCatList =null;
		
		try {
			String ITEMCAT_KEY="ITEMCAT_"+id;
			String jsonItemCat = redisService.get(ITEMCAT_KEY);
			//判断缓存中是否有数据
			if(StringUtils.isNotEmpty(jsonItemCat)){//有数据
				//将json串转为jsonNode
				JsonNode jsonNode = MAPPER.readTree(jsonItemCat);
				//利用jackson提供的方法，将jsonNode转为json对象
				itemCatList = MAPPER.readValue(jsonNode.traverse(), MAPPER.getTypeFactory().constructMapLikeType(List.class, ItemCat.class, null));
				return itemCatList1;
			}
			//写数据到缓存，把java对象变成字符串；缓存如果出错不能抛异常，要让业务继续运行。
			ItemCat itemCat = new ItemCat();
			itemCat.setStatus(1);
			itemCat.setParentId(id);
			itemCatList = itemCatMapper.select(itemCat);
			jsonItemCat = MAPPER.writeValueAsString(itemCatList);
			redisService.set(ITEMCAT_KEY,jsonItemCat);
			return itemCatList;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
}
